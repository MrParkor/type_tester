<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__main_8py_source" xml:lang="en-US">
<title>Main.py</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__main_8py_source_1l00001"/><link linkend="_namespace_main">00001</link> 
<anchor xml:id="__main_8py_source_1l00002"/>00002 <emphasis role="comment">#&#32;Modules</emphasis>
<anchor xml:id="__main_8py_source_1l00003"/>00003 <emphasis role="keyword">from</emphasis>&#32;phrases&#32;<emphasis role="keyword">import</emphasis>&#32;*
<anchor xml:id="__main_8py_source_1l00004"/>00004 <emphasis role="keyword">from</emphasis>&#32;random&#32;<emphasis role="keyword">import</emphasis>&#32;randint
<anchor xml:id="__main_8py_source_1l00005"/>00005 <emphasis role="keyword">import</emphasis>&#32;time
<anchor xml:id="__main_8py_source_1l00006"/>00006 <emphasis role="keyword">import</emphasis>&#32;datetime
<anchor xml:id="__main_8py_source_1l00007"/>00007 <emphasis role="keyword">import</emphasis>&#32;os
<anchor xml:id="__main_8py_source_1l00008"/>00008 
<anchor xml:id="__main_8py_source_1l00009"/>00009 
<anchor xml:id="__main_8py_source_1l00010"/>00010 <emphasis role="comment">#&#32;Variables</emphasis>
<anchor xml:id="__main_8py_source_1l00011"/><link linkend="_namespace_main_1afb87e9c2cd127261c128cd6522c8613c">00011</link> now&#32;=&#32;datetime.datetime.now()
<anchor xml:id="__main_8py_source_1l00012"/><link linkend="_namespace_main_1a4e23762ea59613a42985604a0cedbd86">00012</link> CurrentDate&#32;=&#32;str(now.strftime(<emphasis role="stringliteral">&quot;%d-%m-%Y&quot;</emphasis>))
<anchor xml:id="__main_8py_source_1l00013"/><link linkend="_namespace_main_1a8689c769cd84287a04dc7c8d27774f9e">00013</link> CurrentTime&#32;=&#32;str(now.strftime(<emphasis role="stringliteral">&quot;%H.%M&quot;</emphasis>))
<anchor xml:id="__main_8py_source_1l00014"/>00014 
<anchor xml:id="__main_8py_source_1l00015"/><link linkend="_namespace_main_1a130601c3bd8356a1a32d413cd468a2c7">00015</link> CurrentDirectory&#32;=&#32;os.getcwd()
<anchor xml:id="__main_8py_source_1l00016"/><link linkend="_namespace_main_1afdeb3521e270ae29c9d7a67f1e8d8691">00016</link> CreateUserDir&#32;=&#32;os.path.join(CurrentDirectory,&#32;<emphasis role="stringliteral">&quot;Users&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00017"/><link linkend="_namespace_main_1aadca5f678e366137bdf1fedbb6cc58ad">00017</link> UsersDirectory&#32;=&#32;f<emphasis role="stringliteral">&quot;{CurrentDirectory}/Users&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00018"/><link linkend="_namespace_main_1ad2eac4f47d5a5b9d2402584bc7291c4e">00018</link> OSUserDirectory&#32;=&#32;os.path.join(UsersDirectory)
<anchor xml:id="__main_8py_source_1l00019"/>00019 
<anchor xml:id="__main_8py_source_1l00020"/><link linkend="_namespace_main_1ac8f9d70642442b220e9d42af4be6268d">00020</link> TestPhraseType&#32;=&#32;TestPhrase[randint(0,len(TestPhrase)-1)]
<anchor xml:id="__main_8py_source_1l00021"/><link linkend="_namespace_main_1ae47844a282521a252f4a2b31eb88e52c">00021</link> MainPhraseSplitted&#32;=&#32;[]
<anchor xml:id="__main_8py_source_1l00022"/><link linkend="_namespace_main_1a754949a4060496aabeadc57c09b5bef5">00022</link> UserPhraseSplitted&#32;=&#32;[]
<anchor xml:id="__main_8py_source_1l00023"/>00023 
<anchor xml:id="__main_8py_source_1l00024"/>00024 <emphasis role="comment">#&#32;Classes</emphasis>
<anchor xml:id="__main_8py_source_1l00025"/>00025 
<anchor xml:id="__main_8py_source_1l00026"/>00026 <emphasis role="comment">#&#32;The&#32;class&#32;`Parrent`&#32;initializes&#32;by&#32;creating&#32;a&#32;user&#32;directory&#32;and&#32;prompting&#32;the&#32;user&#32;to&#32;choose</emphasis>
<anchor xml:id="__main_8py_source_1l00027"/>00027 <emphasis role="comment">#&#32;between&#32;logging&#32;in&#32;or&#32;signing&#32;up&#32;before&#32;displaying&#32;a&#32;message.</emphasis>
<anchor xml:id="__main_8py_source_1l00028"/><link linkend="_class_main_1_1_parrent">00028</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_main_1_1_parrent">Parrent</link>():
<anchor xml:id="__main_8py_source_1l00029"/><link linkend="_class_main_1_1_parrent_1a0d4f0b11961e6fba99cf118fd1207fbd">00029</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_class_main_1_1_parrent_1a0d4f0b11961e6fba99cf118fd1207fbd">__init__</link>(self):
<anchor xml:id="__main_8py_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1abb8688485662cdab50dd3a21be5bd011">MakeStartUserDir</link>()
<anchor xml:id="__main_8py_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a5208611bd9857e271f1f29adfaf6d486">LoginSignupChoise</link>()
<anchor xml:id="__main_8py_source_1l00032"/>00032 
<anchor xml:id="__main_8py_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Please&#32;enter&#32;this&#32;phrase&#32;as&#32;fast&#32;as&#32;you&#32;can:\n&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00034"/>00034 
<anchor xml:id="__main_8py_source_1l00035"/>00035 
<anchor xml:id="__main_8py_source_1l00036"/>00036 <emphasis role="comment">#&#32;The&#32;`Beginner`&#32;class&#32;in&#32;Python&#32;is&#32;designed&#32;to&#32;help&#32;beginners&#32;practice&#32;typing&#32;phrases&#32;and&#32;measure</emphasis>
<anchor xml:id="__main_8py_source_1l00037"/>00037 <emphasis role="comment">#&#32;their&#32;accuracy&#32;and&#32;speed.</emphasis>
<anchor xml:id="__main_8py_source_1l00038"/><link linkend="_class_main_1_1_beginner">00038</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_main_1_1_beginner">Beginner</link>(<link linkend="_class_main_1_1_parrent">Parrent</link>):
<anchor xml:id="__main_8py_source_1l00039"/><link linkend="_class_main_1_1_beginner_1a27cd5307b220e55ffba9fa4841ad8b4b">00039</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_class_main_1_1_beginner_1a27cd5307b220e55ffba9fa4841ad8b4b">__init__</link>(self):
<anchor xml:id="__main_8py_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;super().<link linkend="_class_main_1_1_beginner_1a27cd5307b220e55ffba9fa4841ad8b4b">__init__</link>()
<anchor xml:id="__main_8py_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__main_8py_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Phrase&#32;=&#32;BeginnerPhrase[randint(0,len(BeginnerPhrase)-1)]
<anchor xml:id="__main_8py_source_1l00043"/>00043 
<anchor xml:id="__main_8py_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a1d01b0f3654eb2b5a68c9f9ebc30a76f">PhraseSplit</link>(Phrase,&#32;MainPhraseSplitted)
<anchor xml:id="__main_8py_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(MainPhraseSplitted,<emphasis role="stringliteral">&quot;\n&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00046"/>00046 
<anchor xml:id="__main_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartTime&#32;=&#32;<link linkend="_namespace_main_1ade6a1244786f64f5339dc08d360b4656">TimerStart</link>()
<anchor xml:id="__main_8py_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UserInput&#32;=&#32;input()
<anchor xml:id="__main_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EndTime&#32;=&#32;<link linkend="_namespace_main_1aad33940e3c3aecc747de02d073e8ef90">TimerEnd</link>()
<anchor xml:id="__main_8py_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Time&#32;=&#32;<link linkend="_namespace_main_1acdc63151e37b23f383d2cdaee1224915">SetTime</link>(StartTime,&#32;EndTime)
<anchor xml:id="__main_8py_source_1l00051"/>00051 
<anchor xml:id="__main_8py_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a3dea03126fc26dc32fa78d9668c2fe9d">Checker</link>(UserPhraseSplitted,&#32;MainPhraseSplitted)
<anchor xml:id="__main_8py_source_1l00053"/>00053 
<anchor xml:id="__main_8py_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a1d01b0f3654eb2b5a68c9f9ebc30a76f">PhraseSplit</link>(UserInput,&#32;UserPhraseSplitted)
<anchor xml:id="__main_8py_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a91347ff47fc2acd8750dc2f72dc91e0e">Accuracy</link>()
<anchor xml:id="__main_8py_source_1l00056"/>00056 
<anchor xml:id="__main_8py_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a30424fcb6e4b7f7c1d17d854078fc7d1">WriteTime</link>(Time,&#32;AccuracyPercent,&#32;__class__.__name__)
<anchor xml:id="__main_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(Time)
<anchor xml:id="__main_8py_source_1l00059"/>00059 
<anchor xml:id="__main_8py_source_1l00060"/>00060 <emphasis role="comment">#&#32;The&#32;`Intermidiate`&#32;class&#32;is&#32;designed&#32;to&#32;handle&#32;user&#32;input,&#32;check&#32;its&#32;accuracy&#32;against&#32;a&#32;main&#32;phrase,</emphasis>
<anchor xml:id="__main_8py_source_1l00061"/>00061 <emphasis role="comment">#&#32;and&#32;record&#32;timing&#32;and&#32;accuracy&#32;metrics.</emphasis>
<anchor xml:id="__main_8py_source_1l00062"/><link linkend="_class_main_1_1_intermidiate">00062</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_main_1_1_intermidiate">Intermidiate</link>(<link linkend="_class_main_1_1_parrent">Parrent</link>):
<anchor xml:id="__main_8py_source_1l00063"/><link linkend="_class_main_1_1_intermidiate_1a44a353367883c6128f03a016a87f36e3">00063</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_class_main_1_1_intermidiate_1a44a353367883c6128f03a016a87f36e3">__init__</link>(self):
<anchor xml:id="__main_8py_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;super().<link linkend="_class_main_1_1_intermidiate_1a44a353367883c6128f03a016a87f36e3">__init__</link>()
<anchor xml:id="__main_8py_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__main_8py_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Phrase&#32;=&#32;IntiermidiatePhrase[randint(0,len(IntiermidiatePhrase)-1)]
<anchor xml:id="__main_8py_source_1l00067"/>00067 
<anchor xml:id="__main_8py_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a1d01b0f3654eb2b5a68c9f9ebc30a76f">PhraseSplit</link>(Phrase,&#32;MainPhraseSplitted)
<anchor xml:id="__main_8py_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(MainPhraseSplitted,<emphasis role="stringliteral">&quot;\n&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00070"/>00070 
<anchor xml:id="__main_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartTime&#32;=&#32;<link linkend="_namespace_main_1ade6a1244786f64f5339dc08d360b4656">TimerStart</link>()
<anchor xml:id="__main_8py_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UserInput&#32;=&#32;input()
<anchor xml:id="__main_8py_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EndTime&#32;=&#32;<link linkend="_namespace_main_1aad33940e3c3aecc747de02d073e8ef90">TimerEnd</link>()
<anchor xml:id="__main_8py_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Time&#32;=&#32;<link linkend="_namespace_main_1acdc63151e37b23f383d2cdaee1224915">SetTime</link>(StartTime,&#32;EndTime)
<anchor xml:id="__main_8py_source_1l00075"/>00075 
<anchor xml:id="__main_8py_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a3dea03126fc26dc32fa78d9668c2fe9d">Checker</link>(UserPhraseSplitted,&#32;MainPhraseSplitted)
<anchor xml:id="__main_8py_source_1l00077"/>00077 
<anchor xml:id="__main_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a1d01b0f3654eb2b5a68c9f9ebc30a76f">PhraseSplit</link>(UserInput,&#32;UserPhraseSplitted)
<anchor xml:id="__main_8py_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a91347ff47fc2acd8750dc2f72dc91e0e">Accuracy</link>()
<anchor xml:id="__main_8py_source_1l00080"/>00080 
<anchor xml:id="__main_8py_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a30424fcb6e4b7f7c1d17d854078fc7d1">WriteTime</link>(Time,&#32;AccuracyPercent,&#32;__class__.__name__)
<anchor xml:id="__main_8py_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(Time)
<anchor xml:id="__main_8py_source_1l00083"/>00083 
<anchor xml:id="__main_8py_source_1l00084"/>00084 <emphasis role="comment">#&#32;This&#32;Python&#32;class&#32;`Expert`&#32;initializes&#32;with&#32;a&#32;random&#32;phrase,&#32;prompts&#32;user&#32;input,&#32;calculates&#32;time</emphasis>
<anchor xml:id="__main_8py_source_1l00085"/>00085 <emphasis role="comment">#&#32;taken,&#32;checks&#32;accuracy,&#32;and&#32;writes&#32;time&#32;and&#32;accuracy&#32;to&#32;a&#32;file.</emphasis>
<anchor xml:id="__main_8py_source_1l00086"/><link linkend="_class_main_1_1_expert">00086</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_main_1_1_expert">Expert</link>(<link linkend="_class_main_1_1_parrent">Parrent</link>):
<anchor xml:id="__main_8py_source_1l00087"/><link linkend="_class_main_1_1_expert_1ac75b8e039a48ae806574ed64c7670498">00087</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_class_main_1_1_expert_1ac75b8e039a48ae806574ed64c7670498">__init__</link>(self):
<anchor xml:id="__main_8py_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;super().<link linkend="_class_main_1_1_expert_1ac75b8e039a48ae806574ed64c7670498">__init__</link>()
<anchor xml:id="__main_8py_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__main_8py_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Phrase&#32;=&#32;ExpertPhrase[randint(0,len(ExpertPhrase)-1)]
<anchor xml:id="__main_8py_source_1l00091"/>00091 
<anchor xml:id="__main_8py_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a1d01b0f3654eb2b5a68c9f9ebc30a76f">PhraseSplit</link>(Phrase,&#32;MainPhraseSplitted)
<anchor xml:id="__main_8py_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(MainPhraseSplitted,<emphasis role="stringliteral">&quot;\n&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00094"/>00094 
<anchor xml:id="__main_8py_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartTime&#32;=&#32;<link linkend="_namespace_main_1ade6a1244786f64f5339dc08d360b4656">TimerStart</link>()
<anchor xml:id="__main_8py_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UserInput&#32;=&#32;input()
<anchor xml:id="__main_8py_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EndTime&#32;=&#32;<link linkend="_namespace_main_1aad33940e3c3aecc747de02d073e8ef90">TimerEnd</link>()
<anchor xml:id="__main_8py_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Time&#32;=&#32;<link linkend="_namespace_main_1acdc63151e37b23f383d2cdaee1224915">SetTime</link>(StartTime,&#32;EndTime)
<anchor xml:id="__main_8py_source_1l00099"/>00099 
<anchor xml:id="__main_8py_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a3dea03126fc26dc32fa78d9668c2fe9d">Checker</link>(UserPhraseSplitted,&#32;MainPhraseSplitted)
<anchor xml:id="__main_8py_source_1l00101"/>00101 
<anchor xml:id="__main_8py_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a1d01b0f3654eb2b5a68c9f9ebc30a76f">PhraseSplit</link>(UserInput,&#32;UserPhraseSplitted)
<anchor xml:id="__main_8py_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a91347ff47fc2acd8750dc2f72dc91e0e">Accuracy</link>()
<anchor xml:id="__main_8py_source_1l00104"/>00104 
<anchor xml:id="__main_8py_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a30424fcb6e4b7f7c1d17d854078fc7d1">WriteTime</link>(Time,&#32;AccuracyPercent,&#32;__class__.__name__)
<anchor xml:id="__main_8py_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(Time)
<anchor xml:id="__main_8py_source_1l00107"/>00107 
<anchor xml:id="__main_8py_source_1l00108"/>00108 
<anchor xml:id="__main_8py_source_1l00109"/><link linkend="_namespace_main_1a1d01b0f3654eb2b5a68c9f9ebc30a76f">00109</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespace_main_1a1d01b0f3654eb2b5a68c9f9ebc30a76f">PhraseSplit</link>(SplittingPhrase,&#32;List):
<anchor xml:id="__main_8py_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00111"/>00111 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;`PhraseSplit`&#32;takes&#32;a&#32;phrase&#32;and&#32;appends&#32;each&#32;letter&#32;to&#32;a&#32;given&#32;list.</emphasis>
<anchor xml:id="__main_8py_source_1l00112"/>00112 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__main_8py_source_1l00113"/>00113 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;:param&#32;SplittingPhrase:&#32;The&#32;`SplittingPhrase`&#32;parameter&#32;is&#32;the&#32;phrase&#32;or&#32;string&#32;that&#32;you&#32;want&#32;to</emphasis>
<anchor xml:id="__main_8py_source_1l00114"/>00114 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;split&#32;into&#32;individual&#32;letters</emphasis>
<anchor xml:id="__main_8py_source_1l00115"/>00115 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;:param&#32;List:&#32;The&#32;`List`&#32;parameter&#32;in&#32;the&#32;`PhraseSplit`&#32;function&#32;is&#32;a&#32;list&#32;that&#32;will&#32;store&#32;the</emphasis>
<anchor xml:id="__main_8py_source_1l00116"/>00116 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;individual&#32;letters&#32;of&#32;the&#32;`SplittingPhrase`&#32;after&#32;splitting</emphasis>
<anchor xml:id="__main_8py_source_1l00117"/>00117 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;Letter&#32;<emphasis role="keywordflow">in</emphasis>&#32;SplittingPhrase:
<anchor xml:id="__main_8py_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List.append(Letter)
<anchor xml:id="__main_8py_source_1l00120"/>00120 
<anchor xml:id="__main_8py_source_1l00121"/><link linkend="_namespace_main_1ade6a1244786f64f5339dc08d360b4656">00121</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespace_main_1ade6a1244786f64f5339dc08d360b4656">TimerStart</link>():
<anchor xml:id="__main_8py_source_1l00122"/>00122 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00123"/>00123 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;`TimerStart()`&#32;returns&#32;the&#32;current&#32;time&#32;when&#32;called.</emphasis>
<anchor xml:id="__main_8py_source_1l00124"/>00124 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;:return:&#32;The&#32;`TimerStart()`&#32;function&#32;is&#32;returning&#32;the&#32;current&#32;time&#32;when&#32;it&#32;is&#32;called&#32;using</emphasis>
<anchor xml:id="__main_8py_source_1l00125"/>00125 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;`time.time()`.</emphasis>
<anchor xml:id="__main_8py_source_1l00126"/>00126 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00127"/>00127 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;time.time()
<anchor xml:id="__main_8py_source_1l00128"/>00128 
<anchor xml:id="__main_8py_source_1l00129"/><link linkend="_namespace_main_1aad33940e3c3aecc747de02d073e8ef90">00129</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespace_main_1aad33940e3c3aecc747de02d073e8ef90">TimerEnd</link>():
<anchor xml:id="__main_8py_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00131"/>00131 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;`TimerEnd`&#32;returns&#32;the&#32;current&#32;time&#32;when&#32;called.</emphasis>
<anchor xml:id="__main_8py_source_1l00132"/>00132 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;:return:&#32;The&#32;function&#32;`TimerEnd()`&#32;is&#32;returning&#32;the&#32;current&#32;time&#32;when&#32;it&#32;is&#32;called&#32;using</emphasis>
<anchor xml:id="__main_8py_source_1l00133"/>00133 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;`time.time()`.</emphasis>
<anchor xml:id="__main_8py_source_1l00134"/>00134 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;time.time()
<anchor xml:id="__main_8py_source_1l00136"/>00136 
<anchor xml:id="__main_8py_source_1l00137"/><link linkend="_namespace_main_1abb8688485662cdab50dd3a21be5bd011">00137</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespace_main_1abb8688485662cdab50dd3a21be5bd011">MakeStartUserDir</link>():
<anchor xml:id="__main_8py_source_1l00138"/>00138 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00139"/>00139 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;attempts&#32;to&#32;create&#32;a&#32;Users&#32;folder&#32;if&#32;it&#32;does&#32;not&#32;already&#32;exist.</emphasis>
<anchor xml:id="__main_8py_source_1l00140"/>00140 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00141"/>00141 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:&#32;<emphasis role="comment">#&#32;Make&#32;the&#32;Users&#32;Folder&#32;if&#32;it&#32;doesn&apos;t&#32;exist</emphasis>
<anchor xml:id="__main_8py_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.mkdir(CreateUserDir)
<anchor xml:id="__main_8py_source_1l00143"/>00143 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>:
<anchor xml:id="__main_8py_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">pass</emphasis>
<anchor xml:id="__main_8py_source_1l00145"/>00145 
<anchor xml:id="__main_8py_source_1l00146"/><link linkend="_namespace_main_1a1cb922774e428172dfd6fdc29f151ea1">00146</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespace_main_1a1cb922774e428172dfd6fdc29f151ea1">SignUp</link>():
<anchor xml:id="__main_8py_source_1l00147"/>00147 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00148"/>00148 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;`SignUp`&#32;prompts&#32;the&#32;user&#32;to&#32;enter&#32;a&#32;username,&#32;creates&#32;a&#32;directory&#32;with&#32;that&#32;username,</emphasis>
<anchor xml:id="__main_8py_source_1l00149"/>00149 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;and&#32;handles&#32;cases&#32;where&#32;the&#32;username&#32;already&#32;exists.</emphasis>
<anchor xml:id="__main_8py_source_1l00150"/>00150 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00151"/>00151 &#32;&#32;&#32;&#32;UserName&#32;=&#32;input(<emphasis role="stringliteral">&quot;Please&#32;enter&#32;your&#32;Username:&#32;&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00152"/>00152 &#32;&#32;&#32;&#32;UserDir&#32;=&#32;os.path.join(OSUserDirectory,&#32;UserName)
<anchor xml:id="__main_8py_source_1l00153"/>00153 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="__main_8py_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.mkdir(UserDir)
<anchor xml:id="__main_8py_source_1l00155"/>00155 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>:
<anchor xml:id="__main_8py_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;That&#32;User&#32;Already&#32;Exists&#32;try&#32;again&#32;\n&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a1cb922774e428172dfd6fdc29f151ea1">SignUp</link>()
<anchor xml:id="__main_8py_source_1l00158"/>00158 
<anchor xml:id="__main_8py_source_1l00159"/><link linkend="_namespace_main_1a90e0a9375c99e2b6358a9719e0d98564">00159</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespace_main_1a90e0a9375c99e2b6358a9719e0d98564">Login</link>():
<anchor xml:id="__main_8py_source_1l00160"/>00160 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00161"/>00161 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;`Login`&#32;function&#32;prompts&#32;the&#32;user&#32;to&#32;enter&#32;a&#32;username,&#32;creates&#32;a&#32;directory&#32;for&#32;the&#32;user,&#32;and</emphasis>
<anchor xml:id="__main_8py_source_1l00162"/>00162 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;handles&#32;login&#32;success&#32;or&#32;failure.</emphasis>
<anchor xml:id="__main_8py_source_1l00163"/>00163 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00164"/>00164 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;CurrentUser
<anchor xml:id="__main_8py_source_1l00165"/>00165 &#32;&#32;&#32;&#32;CurrentUser&#32;=&#32;input(<emphasis role="stringliteral">&quot;Please&#32;enter&#32;the&#32;username:&#32;&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00166"/>00166 &#32;&#32;&#32;&#32;UserDir&#32;=&#32;os.path.join(OSUserDirectory,&#32;CurrentUser)
<anchor xml:id="__main_8py_source_1l00167"/>00167 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
<anchor xml:id="__main_8py_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.mkdir(UserDir)
<anchor xml:id="__main_8py_source_1l00169"/>00169 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>:&#32;<emphasis role="comment">#&#32;If&#32;successful&#32;login</emphasis>
<anchor xml:id="__main_8py_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;Success&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00171"/>00171 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="__main_8py_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;User&#32;doesn&apos;t&#32;exist...&#32;Try&#32;again\n&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.rmdir(UserDir)
<anchor xml:id="__main_8py_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a90e0a9375c99e2b6358a9719e0d98564">Login</link>()
<anchor xml:id="__main_8py_source_1l00175"/>00175 
<anchor xml:id="__main_8py_source_1l00176"/>00176 
<anchor xml:id="__main_8py_source_1l00177"/><link linkend="_namespace_main_1a5208611bd9857e271f1f29adfaf6d486">00177</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespace_main_1a5208611bd9857e271f1f29adfaf6d486">LoginSignupChoise</link>():
<anchor xml:id="__main_8py_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00179"/>00179 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;`LoginSignupChoise`&#32;prompts&#32;the&#32;user&#32;to&#32;choose&#32;between&#32;logging&#32;in&#32;or&#32;signing&#32;up&#32;and</emphasis>
<anchor xml:id="__main_8py_source_1l00180"/>00180 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;then&#32;calls&#32;the&#32;respective&#32;functions&#32;based&#32;on&#32;the&#32;user&apos;s&#32;choice.</emphasis>
<anchor xml:id="__main_8py_source_1l00181"/>00181 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00182"/>00182 &#32;&#32;&#32;&#32;Login_Signup&#32;=&#32;input(<emphasis role="stringliteral">&quot;Do&#32;you&#32;want&#32;to&#32;log&#32;in&#32;(L)&#32;or&#32;sign&#32;up&#32;(S)?\n&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00183"/>00183 
<anchor xml:id="__main_8py_source_1l00184"/>00184 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;Login_Signup.lower()&#32;==&#32;<emphasis role="stringliteral">&quot;l&quot;</emphasis>:
<anchor xml:id="__main_8py_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a90e0a9375c99e2b6358a9719e0d98564">Login</link>()
<anchor xml:id="__main_8py_source_1l00186"/>00186 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;Login_Signup.lower()&#32;==&#32;<emphasis role="stringliteral">&quot;s&quot;</emphasis>:
<anchor xml:id="__main_8py_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a1cb922774e428172dfd6fdc29f151ea1">SignUp</link>()
<anchor xml:id="__main_8py_source_1l00188"/>00188 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="__main_8py_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(f<emphasis role="stringliteral">&quot;Something&#32;went&#32;wrong,&#32;try&#32;again&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a5208611bd9857e271f1f29adfaf6d486">LoginSignupChoise</link>()
<anchor xml:id="__main_8py_source_1l00191"/>00191 
<anchor xml:id="__main_8py_source_1l00192"/>00192 
<anchor xml:id="__main_8py_source_1l00193"/><link linkend="_namespace_main_1acdc63151e37b23f383d2cdaee1224915">00193</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespace_main_1acdc63151e37b23f383d2cdaee1224915">SetTime</link>(StartTime,&#32;EndTime):
<anchor xml:id="__main_8py_source_1l00194"/>00194 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00195"/>00195 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;SetTime&#32;calculates&#32;the&#32;difference&#32;in&#32;time&#32;between&#32;a&#32;start&#32;time&#32;and&#32;an&#32;end&#32;time.</emphasis>
<anchor xml:id="__main_8py_source_1l00196"/>00196 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__main_8py_source_1l00197"/>00197 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;:param&#32;StartTime:&#32;The&#32;`StartTime`&#32;parameter&#32;represents&#32;the&#32;starting&#32;time,&#32;typically&#32;in&#32;a&#32;numerical</emphasis>
<anchor xml:id="__main_8py_source_1l00198"/>00198 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;format&#32;such&#32;as&#32;a&#32;timestamp&#32;or&#32;a&#32;numerical&#32;value&#32;representing&#32;a&#32;specific&#32;time</emphasis>
<anchor xml:id="__main_8py_source_1l00199"/>00199 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;:param&#32;EndTime:&#32;The&#32;`EndTime`&#32;parameter&#32;represents&#32;the&#32;time&#32;at&#32;which&#32;a&#32;particular&#32;event&#32;or&#32;process</emphasis>
<anchor xml:id="__main_8py_source_1l00200"/>00200 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;ends.&#32;It&#32;could&#32;be&#32;a&#32;specific&#32;point&#32;in&#32;time,&#32;such&#32;as&#32;the&#32;end&#32;of&#32;a&#32;task&#32;or&#32;the&#32;completion&#32;of&#32;an</emphasis>
<anchor xml:id="__main_8py_source_1l00201"/>00201 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;activity</emphasis>
<anchor xml:id="__main_8py_source_1l00202"/>00202 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;:return:&#32;The&#32;function&#32;`SetTime`&#32;returns&#32;the&#32;difference&#32;between&#32;`EndTime`&#32;and&#32;`StartTime`&#32;as&#32;an</emphasis>
<anchor xml:id="__main_8py_source_1l00203"/>00203 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;integer.</emphasis>
<anchor xml:id="__main_8py_source_1l00204"/>00204 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00205"/>00205 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;int(EndTime&#32;-&#32;StartTime)
<anchor xml:id="__main_8py_source_1l00206"/>00206 
<anchor xml:id="__main_8py_source_1l00207"/>00207 
<anchor xml:id="__main_8py_source_1l00208"/><link linkend="_namespace_main_1a30424fcb6e4b7f7c1d17d854078fc7d1">00208</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespace_main_1a30424fcb6e4b7f7c1d17d854078fc7d1">WriteTime</link>(time,&#32;accuracy,&#32;difficulty):
<anchor xml:id="__main_8py_source_1l00209"/>00209 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00210"/>00210 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;`WriteTime`&#32;writes&#32;time-related&#32;data&#32;to&#32;a&#32;text&#32;file&#32;in&#32;a&#32;specified&#32;directory.</emphasis>
<anchor xml:id="__main_8py_source_1l00211"/>00211 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__main_8py_source_1l00212"/>00212 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;:param&#32;time:&#32;The&#32;`time`&#32;parameter&#32;in&#32;the&#32;`WriteTime`&#32;function&#32;represents&#32;the&#32;amount&#32;of&#32;time&#32;taken&#32;to</emphasis>
<anchor xml:id="__main_8py_source_1l00213"/>00213 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;complete&#32;a&#32;task&#32;or&#32;activity,&#32;typically&#32;measured&#32;in&#32;seconds</emphasis>
<anchor xml:id="__main_8py_source_1l00214"/>00214 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;:param&#32;accuracy:&#32;Accuracy&#32;refers&#32;to&#32;how&#32;close&#32;a&#32;measured&#32;value&#32;is&#32;to&#32;the&#32;true&#32;value.&#32;It&#32;is&#32;often</emphasis>
<anchor xml:id="__main_8py_source_1l00215"/>00215 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;expressed&#32;as&#32;a&#32;percentage&#32;and&#32;indicates&#32;the&#32;precision&#32;of&#32;the&#32;measurement.&#32;In&#32;the&#32;context&#32;of&#32;the</emphasis>
<anchor xml:id="__main_8py_source_1l00216"/>00216 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;`WriteTime`&#32;function&#32;you&#32;provided,&#32;accuracy&#32;would&#32;likely&#32;refer&#32;to&#32;the&#32;precision&#32;or&#32;correctness&#32;of</emphasis>
<anchor xml:id="__main_8py_source_1l00217"/>00217 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;the&#32;time&#32;measurement&#32;or&#32;task&#32;completion</emphasis>
<anchor xml:id="__main_8py_source_1l00218"/>00218 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;:param&#32;difficulty:&#32;The&#32;`WriteTime`&#32;function&#32;you&#32;provided&#32;seems&#32;to&#32;be&#32;writing&#32;some&#32;information&#32;to&#32;a</emphasis>
<anchor xml:id="__main_8py_source_1l00219"/>00219 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;text&#32;file.&#32;However,&#32;it&#32;seems&#32;like&#32;you&#32;haven&apos;t&#32;defined&#32;`CurrentUser`,&#32;`CurrentDate`,&#32;and</emphasis>
<anchor xml:id="__main_8py_source_1l00220"/>00220 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;`CurrentTime`&#32;in&#32;the&#32;function.&#32;You&#32;will&#32;need&#32;to&#32;pass&#32;these&#32;variables&#32;as&#32;arguments&#32;to&#32;the&#32;function&#32;or</emphasis>
<anchor xml:id="__main_8py_source_1l00221"/>00221 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;define&#32;them&#32;within</emphasis>
<anchor xml:id="__main_8py_source_1l00222"/>00222 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00223"/>00223 &#32;&#32;&#32;&#32;Directory&#32;=&#32;f<emphasis role="stringliteral">&quot;{os.getcwd()}/Users/{CurrentUser}&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00224"/>00224 &#32;&#32;&#32;&#32;Place&#32;=&#32;os.path.join(Directory,&#32;f<emphasis role="stringliteral">&quot;{CurrentDate}&#32;{CurrentTime}.txt&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00225"/>00225 &#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;open(Place,&#32;<emphasis role="stringliteral">&quot;w&quot;</emphasis>)&#32;<emphasis role="keyword">as</emphasis>&#32;File:
<anchor xml:id="__main_8py_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;File.write(f<emphasis role="stringliteral">&quot;Date:&#32;{CurrentDate}\n&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;File.write(f<emphasis role="stringliteral">&quot;Clock&#32;Time:&#32;{CurrentTime}\n&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;File.write(f<emphasis role="stringliteral">&quot;Difficulty:&#32;{difficulty}\n&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;File.write(f<emphasis role="stringliteral">&quot;Your&#32;Time:&#32;{time}&#32;secs&#32;\n&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;File.write(f<emphasis role="stringliteral">&quot;Your&#32;accuracy:&#32;{accuracy}%\n&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00231"/>00231 
<anchor xml:id="__main_8py_source_1l00232"/><link linkend="_namespace_main_1a3dea03126fc26dc32fa78d9668c2fe9d">00232</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespace_main_1a3dea03126fc26dc32fa78d9668c2fe9d">Checker</link>(Phrase1,&#32;Phrase2):
<anchor xml:id="__main_8py_source_1l00233"/>00233 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00234"/>00234 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;`Checker`&#32;compares&#32;two&#32;phrases&#32;character&#32;by&#32;character&#32;and&#32;counts&#32;the&#32;number&#32;of&#32;correct</emphasis>
<anchor xml:id="__main_8py_source_1l00235"/>00235 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;matches.</emphasis>
<anchor xml:id="__main_8py_source_1l00236"/>00236 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__main_8py_source_1l00237"/>00237 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;:param&#32;Phrase1:&#32;The&#32;function&#32;`Checker`&#32;takes&#32;two&#32;input&#32;parameters&#32;`Phrase1`&#32;and&#32;`Phrase2`,&#32;which&#32;are</emphasis>
<anchor xml:id="__main_8py_source_1l00238"/>00238 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;strings&#32;that&#32;are&#32;being&#32;compared&#32;character&#32;by&#32;character.&#32;The&#32;function&#32;then&#32;counts&#32;the&#32;number&#32;of</emphasis>
<anchor xml:id="__main_8py_source_1l00239"/>00239 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;characters&#32;that&#32;match&#32;at&#32;the&#32;same&#32;position&#32;in&#32;both&#32;phrases&#32;and&#32;stores&#32;the&#32;count&#32;in&#32;the&#32;global</emphasis>
<anchor xml:id="__main_8py_source_1l00240"/>00240 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;variable&#32;`CorrectCounter`</emphasis>
<anchor xml:id="__main_8py_source_1l00241"/>00241 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;:param&#32;Phrase2:&#32;It&#32;looks&#32;like&#32;you&#32;have&#32;defined&#32;a&#32;function&#32;called&#32;`Checker`&#32;that&#32;takes&#32;two&#32;parameters</emphasis>
<anchor xml:id="__main_8py_source_1l00242"/>00242 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;`Phrase1`&#32;and&#32;`Phrase2`.&#32;The&#32;function&#32;compares&#32;the&#32;characters&#32;at&#32;each&#32;index&#32;of&#32;`Phrase1`&#32;and</emphasis>
<anchor xml:id="__main_8py_source_1l00243"/>00243 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;`Phrase2`,&#32;and&#32;increments&#32;a&#32;global&#32;variable&#32;`CorrectCounter`&#32;if&#32;the&#32;characters&#32;match</emphasis>
<anchor xml:id="__main_8py_source_1l00244"/>00244 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00245"/>00245 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;CorrectCounter
<anchor xml:id="__main_8py_source_1l00246"/>00246 &#32;&#32;&#32;&#32;CorrectCounter&#32;=&#32;0
<anchor xml:id="__main_8py_source_1l00247"/>00247 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;index&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(len(Phrase1)):
<anchor xml:id="__main_8py_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;Phrase1[index]&#32;==&#32;Phrase2[index]:
<anchor xml:id="__main_8py_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CorrectCounter&#32;+=&#32;1
<anchor xml:id="__main_8py_source_1l00250"/>00250 
<anchor xml:id="__main_8py_source_1l00251"/>00251 
<anchor xml:id="__main_8py_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__main_8py_source_1l00253"/><link linkend="_namespace_main_1a91347ff47fc2acd8750dc2f72dc91e0e">00253</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespace_main_1a91347ff47fc2acd8750dc2f72dc91e0e">Accuracy</link>():
<anchor xml:id="__main_8py_source_1l00254"/>00254 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00255"/>00255 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;`Accuracy`&#32;function&#32;calculates&#32;the&#32;accuracy&#32;percentage&#32;of&#32;a&#32;user&apos;s&#32;input&#32;compared&#32;to&#32;a&#32;main</emphasis>
<anchor xml:id="__main_8py_source_1l00256"/>00256 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;phrase&#32;by&#32;checking&#32;the&#32;correctness&#32;of&#32;each&#32;word.</emphasis>
<anchor xml:id="__main_8py_source_1l00257"/>00257 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00258"/>00258 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(MainPhraseSplitted)&#32;&gt;=&#32;len(UserPhraseSplitted):
<anchor xml:id="__main_8py_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a3dea03126fc26dc32fa78d9668c2fe9d">Checker</link>(UserPhraseSplitted,&#32;MainPhraseSplitted)
<anchor xml:id="__main_8py_source_1l00260"/>00260 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="__main_8py_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a3dea03126fc26dc32fa78d9668c2fe9d">Checker</link>(MainPhraseSplitted,UserPhraseSplitted)
<anchor xml:id="__main_8py_source_1l00262"/>00262 &#32;&#32;&#32;&#32;
<anchor xml:id="__main_8py_source_1l00263"/>00263 &#32;&#32;&#32;&#32;<emphasis role="keyword">global</emphasis>&#32;AccuracyPercent
<anchor xml:id="__main_8py_source_1l00264"/>00264 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;CorrectCounter&#32;!=&#32;0:
<anchor xml:id="__main_8py_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AccuracyPercent&#32;=&#32;int(CorrectCounter/len(MainPhraseSplitted)*100)
<anchor xml:id="__main_8py_source_1l00266"/>00266 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="__main_8py_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AccuracyPercent&#32;=&#32;0
<anchor xml:id="__main_8py_source_1l00268"/>00268 
<anchor xml:id="__main_8py_source_1l00269"/><link linkend="_namespace_main_1a45dc92198c91285a47318d604e536768">00269</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespace_main_1a45dc92198c91285a47318d604e536768">ChooseDifficulty</link>():
<anchor xml:id="__main_8py_source_1l00270"/>00270 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00271"/>00271 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;The&#32;function&#32;ChooseDifficulty&#32;allows&#32;the&#32;user&#32;to&#32;select&#32;a&#32;desired&#32;difficulty&#32;level&#32;(Beginner,</emphasis>
<anchor xml:id="__main_8py_source_1l00272"/>00272 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;Intermediate,&#32;Expert)&#32;for&#32;a&#32;game.</emphasis>
<anchor xml:id="__main_8py_source_1l00273"/>00273 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;&quot;&quot;&quot;</emphasis>
<anchor xml:id="__main_8py_source_1l00274"/>00274 &#32;&#32;&#32;&#32;Difficulty&#32;=&#32;input(<emphasis role="stringliteral">&quot;Please&#32;enter&#32;you&#32;disired&#32;difficulty:\nBeginner&#32;(B)\nIntermidiate&#32;(I)\nExpert&#32;(E)\n&quot;</emphasis>).lower()
<anchor xml:id="__main_8py_source_1l00275"/>00275 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;Difficulty&#32;==&#32;<emphasis role="stringliteral">&quot;b&quot;</emphasis>:
<anchor xml:id="__main_8py_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_main_1_1_beginner">Beginner</link>()
<anchor xml:id="__main_8py_source_1l00277"/>00277 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;Difficulty&#32;==&#32;<emphasis role="stringliteral">&quot;i&quot;</emphasis>:
<anchor xml:id="__main_8py_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_main_1_1_intermidiate">Intermidiate</link>()
<anchor xml:id="__main_8py_source_1l00279"/>00279 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;Difficulty&#32;==&#32;<emphasis role="stringliteral">&quot;e&quot;</emphasis>:
<anchor xml:id="__main_8py_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_main_1_1_expert">Expert</link>()
<anchor xml:id="__main_8py_source_1l00281"/>00281 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="__main_8py_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;didn&apos;t&#32;understand:&#32;Please&#32;try&#32;again&quot;</emphasis>)
<anchor xml:id="__main_8py_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a45dc92198c91285a47318d604e536768">ChooseDifficulty</link>()
<anchor xml:id="__main_8py_source_1l00284"/>00284 
<anchor xml:id="__main_8py_source_1l00285"/>00285 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&quot;__main__&quot;</emphasis>:
<anchor xml:id="__main_8py_source_1l00286"/>00286 &#32;&#32;&#32;&#32;<link linkend="_namespace_main_1a45dc92198c91285a47318d604e536768">ChooseDifficulty</link>()
</programlisting></section>
